// Mocks generated by Mockito 5.1.0 from annotations
// in clean_core/test/src/ui/features/news/bloc/news_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:clean_core/src/data/remote/dto/news/news_model.dart' as _i3;
import 'package:clean_core/src/domain/repository/get_news_repo.dart' as _i2;
import 'package:clean_core/src/domain/uses_cases/base/usecase.dart' as _i6;
import 'package:clean_core/src/domain/uses_cases/get_news_usecase.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetNewsRepository_0 extends _i1.Fake
    implements _i2.GetNewsRepository {}

class _FakeNewsModelDto_1 extends _i1.Fake implements _i3.NewsModelDto {}

/// A class which mocks [GetNewsUseCases].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNewsUseCases extends _i1.Mock implements _i4.GetNewsUseCases {
  MockGetNewsUseCases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNewsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeGetNewsRepository_0()) as _i2.GetNewsRepository);
  @override
  _i5.Future<_i3.NewsModelDto> call(_i6.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue:
                  Future<_i3.NewsModelDto>.value(_FakeNewsModelDto_1()))
          as _i5.Future<_i3.NewsModelDto>);
}
